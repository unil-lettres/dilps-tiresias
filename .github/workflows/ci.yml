name: ci
on: [push, pull_request]
jobs:
    build:
        runs-on: ubuntu-20.04

        env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CI_WEBHOOK_URL }}
            MYSQL_HOST: '127.0.0.1'

        services:
            mariadb:
                image: mariadb:10.4
                ports:
                    - 3306:3306
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes
                    MYSQL_DATABASE: dilps
                options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=5

        strategy:
            matrix:
                php-versions: ['8.1']

        name: PHP${{ matrix.php-versions }}

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Node Setup
              uses: actions/setup-node@v2
              with:
                  node-version: '14'

            - name: PHP Setup
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  coverage: pcov
                  tools: cs2pr
                  extensions: imagick

            - name: Show PHP version
              run: php -v

            - name: Cache composer
              uses: actions/cache@v2
              with:
                  path: ~/.cache/composer
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Cache Yarn
              uses: actions/cache@v2
              with:
                  path: ~/.cache/yarn
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-

            - name: Setup problem matchers for PHP
              run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

            - name: Setup problem matchers for PHPUnit
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: Prepare app
              run: |
                  mysql --protocol=tcp --user=root --execute='SET GLOBAL sql_mode = "";'
                  cp example.env .env
                  cp config/autoload/local.php.dist config/autoload/local.php

            - name: Build app
              id: app-build
              run: ./bin/build.sh

            - name: Load test data
              run: ./bin/load-test-data.php

            - name: PHP CS Fixer
              run: ./vendor/bin/php-cs-fixer fix --format=checkstyle | cs2pr

            - name: PHPStan
              run: ./vendor/bin/phpstan analyse

            - name: TSLint
              id: app-tslint
              run: yarn lint

            - name: Prettier
              id: app-prettier
              run: ./node_modules/.bin/prettier --check .

            - name: Test PHP
              id: app-test-php
              run: ./vendor/bin/phpunit --coverage-clover coverage-clover.xml

            - name: Test Angular
              id: app-test-ng
              run: ./node_modules/.bin/ng test --progress false --watch=false --browsers ChromeHeadlessCustom

            - name: Upload code coverage
              run: |
                  curl -LO https://scrutinizer-ci.com/ocular.phar
                  php ocular.phar code-coverage:upload --format=php-clover coverage-clover.xml

            - name: Notify Slack
              uses: act10ns/slack@v1
              with:
                  status: ${{ job.status }}
                  steps: ${{ toJson(steps) }}
                  channel: '#-bot-ci'
              if: always()

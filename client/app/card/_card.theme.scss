@use 'sass:map';
@use '@angular/material' as mat;
@use '../../styles/typography';
@mixin card($theme) {
    $primary: map.get($theme, primary);
    $accent: map.get($theme, accent);
    $warn: map.get($theme, warn);
    $bg: map.get($theme, background);
    $fg: map.get($theme, foreground);

    $config: mat.m2-get-color-config($theme);
    $is-dark-theme: map.get($config, is-dark);
    $label-color: mat.m2-get-color-from-palette($fg, secondary-text, if($is-dark-theme, 0.7, 0.6)) !important;
    $primary-color: mat.m2-get-color-from-palette($primary);

    $transition-animation: 200ms cubic-bezier(0.4, 0, 0.2, 1);
    $hint-height: 22.5px;
    $rich-text-padding-left: 16px;
    $border-bottom-width: 1px;
    $font-size-body-1: mat.m2-font-size(typography.$custom-typography-gt-sm, 'body-1');

    $border: 1px solid if($is-dark-theme, rgb(84, 84, 84), rgb(210 210 210));

    app-card {
        mat-toolbar.edition {
            background: mat.m2-get-color-from-palette($accent, 0.4);
        }

        mat-chip-row {
            font-size: $font-size-body-1;
            font-family: inherit !important;
        }

        .margin-bottom-hint {
            margin-bottom: $hint-height;
        }

        // Try to match official mat-form-field input component style.
        .rich-text {
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            position: relative;
            transition: color $transition-animation;
            margin-bottom: $hint-height;
            outline: none;
            border-bottom: $border-bottom-width solid mat.m2-get-color-from-palette($fg, base, 0.5);
            border-top-right-radius: 4px;
            border-top-left-radius: 4px;
            background: mat.m2-get-color-from-palette($fg, base, if($is-dark-theme, 0.12, 0.02));
            padding: 24px 10px 0 $rich-text-padding-left;

            &::after {
                position: absolute;
                bottom: -$border-bottom-width;
                left: 50%;
                background-color: $primary-color;
                width: 0;
                height: 2px;
                content: '';
            }

            &:hover {
                background: mat.m2-get-color-from-palette($fg, base, if($is-dark-theme, 0.15, 0.06));
            }

            &:focus-within {
                background: mat.m2-get-color-from-palette($fg, base, if($is-dark-theme, 0.25, 0.1));

                &::after {
                    transform: translateX(-50%);
                    transition:
                        width $transition-animation,
                        transform $transition-animation;
                    width: 100%;
                }

                .label {
                    color: $primary-color !important;
                }
            }

            &.filled,
            &:focus-within {
                .label {
                    left: auto;
                    transform: translateY(-106%) scale(0.75);
                }
            }

            .label {
                position: absolute;
                top: 28px;
                left: $rich-text-padding-left;
                transform: translateY(-50%);
                transform-origin: top left;
                transition: transform $transition-animation;
                color: $label-color;
                font-size: $font-size-body-1;
            }

            .ql-container {
                font-size: $font-size-body-1;
                font-family: inherit !important;
                letter-spacing: mat.m2-letter-spacing(typography.$custom-typography-gt-sm, 'body-1');
            }

            quill-editor {
                display: block;
                caret-color: $primary-color;
            }

            .ql-editor {
                padding: 0 0 8px 0;

                p {
                    margin-bottom: 0;
                }
            }

            mat-hint {
                position: absolute;
                right: 16px;
                bottom: -$hint-height;
                font-size: mat.m2-font-size(typography.$custom-typography-gt-sm, 'caption');
            }
        }

        // Be sure that the toolbar stays one one line
        // It should not be necessary but it seems that something goes wrong in the computation of the width by QuillJs
        .ql-flip.ql-tooltip {
            min-width: 170px;
        }

        a[href] {
            overflow-wrap: break-word;
        }

        #fiches-additionnelles {
            table {
                table-layout: fixed !important;

                .mat-column-unlink {
                    width: 53px !important;
                }
            }

            natural-table-button {
                overflow: hidden;
                span {
                    width: 100%;
                    overflow: hidden;
                    line-height: 1.5em;
                    text-overflow: ellipsis;
                }
            }
        }

        // Make disabled select box looks same as disabled text input, eg: the country field
        natural-select .mat-form-field-appearance-fill.mat-form-field-disabled {
            .mat-mdc-form-field {
                background-color: mat.m2-get-color-from-palette($fg, base, if($is-dark-theme, 0.1, 0.04));
            }

            mat-label {
                color: $label-color;
            }

            .mdc-line-ripple::before {
                border-bottom-color: mat.m2-get-color-from-palette(
                    $fg,
                    divider,
                    if($is-dark-theme, 0.5, 0.42)
                ) !important;
            }

            input {
                color: mat.m2-get-color-from-palette($fg, text) !important;
            }
        }

        .left-pane {
            border-right: $border;
        }

        .image {
            background-color: if($is-dark-theme, rgb(26, 26, 26), rgb(235, 235, 235));
        }
    }

    app-card-skeleton {
        .background-fade {
            background: linear-gradient(
                180deg,
                transparent 0%,
                if($is-dark-theme, rgb(48, 48, 48), rgb(250, 250, 250)) 90%
            );
        }

        .bg-pulse {
            animation: loading_pulse 1.5s infinite ease-in-out;
            background-color: if($is-dark-theme, rgb(88, 88, 88), rgb(220, 220, 220));
        }
    }

    app-related-cards {
        .wrapper {
            border-top: $border;
        }
    }
}
